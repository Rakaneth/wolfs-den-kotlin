#Wolf tree

#Aliases
import buffed?: "wolfsden.ai.conditions.BuffedCondition"
import followLeader: "wolfsden.ai.tasks.FollowLeaderTask"
import informLeader: "wolfsden.ai.tasks.InformLeaderTask"
import getTarget: "wolfsden.ai.tasks.GetTargetTask"
import detectPrey?: "wolfsden.ai.conditions.DetectPreyCondition"

subtree name: "notBuffed?"
	invert
		buffed? buffName:"Might"

subtree name: "targetAndInform"
	sequence
		getTarget
		informLeader

#tree definition
root
	dynamicGuardSelector
		(include subtree: "data/ai/common/preyExists.tree" lazy:true) include subtree: "data/ai/hunt.tree" lazy:true
		(detectPrey?) $targetAndInform
		($notBuffed?) followLeader
		() include subtree: "data/ai/common/idle.tree" lazy:true
