#Wolf alpha tree

#imports
import howl: "wolfsden.ai.tasks.HowlTask"
import packInRange?: "wolfsden.ai.conditions.PackInRangeCondition"
import packBuffed?: "wolfsden.ai.conditions.PackBuffedCondition"
import packTarget: "wolfsden.ai.tasks.PackTargetTask"
import packHasTarget?: "wolfsden.ai.conditions.PackHasTargetCondition"
import preyAlive?: "wolfsden.ai.conditions.PreyAliveCondition"
import detectPrey?: "wolfsden.ai.conditions.DetectPreyCondition"
import getTarget: "wolfsden.ai.tasks.GetTargetTask"


subtree name: "packNotBuffed?"
	invert
		packBuffed? buffName:"Might"

subtree name: "packNotTogether?"
	invert
		packHasTarget?

subtree name: "buffPack"
	sequence
		packInRange? skillName:"Howl"
		howl

#tree definition
root
	dynamicGuardSelector
		($packNotTogether?) packTarget
		(include subtree: "data/ai/common/preyExists.tree" lazy:true) include subtree: "data/ai/hunt.tree" lazy:true
		($packNotBuffed?) $buffPack
		() include subtree: "data/ai/common/idle.tree" lazy:true
